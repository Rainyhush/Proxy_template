#全局配置

mode: rule
ipv6: true
global-ua: clash.meta
log-level: info
allow-lan: true
mixed-port: 7890
unified-delay: true
tcp-concurrent: true
keep-alive-interval: 30
interface-name: Meta
find-process-mode: strict
global-client-fingerprint: chrome
external-controller: 127.0.0.1:9090
#外部geo文件
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
geox-url:
  geoip: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geoip.dat"
  geosite: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/geosite.dat"
  mmdb: "https://testingcf.jsdelivr.net/gh/MetaCubeX/meta-rules-dat@release/country.mmdb"
  asn: "https://github.com/xishang0128/geoip/releases/download/latest/GeoLite2-ASN.mmdb"
  proxy: Proxy
profile:
  store-selected: true
  store-fake-ip: true
#嗅探
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
#NTP服务
ntp:
  enable: true
  write-to-system: false
  server: time.apple.com
  port: 123
  interval: 30
#DNS配置
dns:
  enable: true
  prefer-h3: true
  listen: 1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - "+.lan"
    - "+.local"
# 默认DNS, 用于解析DNS服务器的域名。
  default-nameserver:
    - https://1.1.1.1/dns-query
    
    - https://223.5.5.5/dns-query
# 指定域名查询的解析服务器，可使用geosite, 优先于nameserver/fallback查询
  nameserver-policy:
    # 国内域名使用的DNS
    "rule-set:cn,private":
      - https://dns.alidns.com/dns-query
      - https://doh.pub/dns-query
    # 国外域名使用的DNS
    "rule-set:geolocation-!cn,microsoft,telegram,spotify,youtube,github,google,openai":
      - https://cloudflare-dns.com/dns-query
      - https://dns.google/dns-query
# 默认的域名解析服务器，如不配置fallback/proxy-server-nameserver , 则所有域名都由nameserver解析
  nameserver:
    - https://cloudflare-dns.com/dns-query
    - https://dns.google/dns-query
    - https://dns.alidns.com/dns-query
# 代理节点域名解析服务器，仅用于解析代理节点的域名
  proxy-server-nameserver:
    - https://dns.alidns.com/dns-query
# TUN配置
tun:
  name: tun-in
  type: tun
  enable: true
  stack: mixed
  device: Meta
  auto-route: true
  auto-redirect: true
  mtu: 9000
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-detect-interface: true
  strict-route: true

#策略组
pr: &pr
  type: select
  proxies:
    - HK
    - JP
    - TW
    - SG
    - KR
    - US
    - GE
    - CN
    - Other
#订阅更新
p: &p
  type: http
  interval: 43200
  proxy: Proxy
  health-check:
    enable: true
    url: https://www.gstatic.com/generate_204
    interval: 3600
#自动选择策略
u: &u
  type: url-test
  health-check:
    enable: true
    lazy: false
    url: https://www.gstatic.com/generate_204
    interval: 3600
    tolerance: 50
# 订阅url
proxy-providers:
  ZGJ:
    <<: *p
    url: "https://rainyhush-rainyhush.hf.space/RAINYHUSH/download/collection/%E7%BB%84%E5%90%88%E8%AE%A2%E9%98%85?target=ClashMeta"
proxies:
proxy-groups:
  - {name: Proxy, <<: *pr}
  - {name: Google, <<: *pr}
  - {name: GitHub, <<: *pr}
  - {name: OpenAI, <<: *pr}
  - {name: YouTube, <<: *pr}
  - {name: Spotify, <<: *pr}
  - {name: Telegram, <<: *pr}
  - {name: Microsoft, <<: *pr}
#地区分组
  - {name: HK, type: select, include-all-providers: true, filter: "(?i)香港|HK|Hong Kong"}
  - {name: JP, type: select, include-all-providers: true, filter: "(?i)日本|JP|Japan"}
  - {name: SG, type: select, include-all-providers: true, filter: "(?i)新加坡|SG|Singapore"}
  - {name: TW, type: select, include-all-providers: true, filter: "(?i)台湾|TW|TaiWan"}
  - {name: KR, type: select, include-all-providers: true, filter: "(?i)韩国|KR|Korea"}
  - {name: US, type: select, include-all-providers: true, filter: "(?i)美国|US|America"}
  - {name: GE, type: select, include-all-providers: true, filter: "(?i)德国|DE|Germany"}
  - {name: CN, type: select, include-all-providers: true, filter: "(?i)浙江|宁波|宿迁|广东|徐州|广州|鞍山|襄阳|武汉|杭州|济南"}
  - {name: Other, type: select, include-all-providers: true, filter: "(?i)^(?!.*(?:浙江|宁波|宿迁|广东|徐州|广州|鞍山|襄阳|武汉|杭州|济南|香港|HK|Hong Kong|台湾|TW|TaiWan|日本|JP|Japan|新加坡|SG|Singapore|德国|DE|Germany|美国|US|America|韩国|KR|Korea)).*"}
  - {name: Auto, <<: *u, include-all-providers: true}
#路由规则
rules:
  - RULE-SET,category-ads-all,REJECT-DROP
  - GEOIP,LAN,CN
#  - AND,(AND,(DST-PORT,443),(NETWORK,UDP)),(NOT,((GEOSITE,cn))),REJECT-DROP # 禁用quic(不包括国内)  - DST-PORT,53,dns-out
  - RULE-SET,github,GitHub
  - RULE-SET,openai,OpenAI
  - RULE-SET,youtube,YouTube
  - RULE-SET,spotify,Spotify
  - RULE-SET,telegram,Telegram
  - RULE-SET,telegram_ip,Telegram
  - RULE-SET,microsoft,Microsoft
  - RULE-SET,google,Google
  - RULE-SET,google_ip,Google
  - RULE-SET,geolocation-!cn,Proxy
  - RULE-SET,cn,CN
  - RULE-SET,cn_ip,CN
  - RULE-SET,private,CN
  - MATCH,Proxy
rule-anchor:
  ip: &ip
    type: http
    interval: 86400
    proxy: Proxy
    behavior: ipcidr
    format: yaml
  domain: &domain
    type: http
    interval: 86400
    proxy: Proxy
    behavior: domain
    format: yaml
  classical: &classical
    type: http
    interval: 86400
    proxy: Proxy
    behavior: classical
    format: yaml
#规则集
rule-providers:
# 域名
  category-ads-all:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ads-all.yaml"
  cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.yaml"
  private:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.yaml"
  google:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.yaml"
  github:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.yaml"
  openai:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/openai.yaml"
  spotify:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.yaml"
  youtube:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.yaml"
  telegram:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.yaml"
  microsoft:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.yaml"
  geolocation-!cn:
    <<: *domain
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.yaml"
# ip
  cn_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.yaml"
  google_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.yaml"
  telegram_ip:
    <<: *ip
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.yaml"

